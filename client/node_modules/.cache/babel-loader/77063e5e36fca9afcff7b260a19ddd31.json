{"ast":null,"code":"var _jsxFileName = \"/Users/mattbryce/reward-chart/client/src/components/OnlineData/GetOnlineData.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleMinus, faCirclePlus, faStar } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  /* Same as above */\n`;\n_c = Button;\n\nclass GetOnlineData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      isUpdated: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://10.115.1.12:9000/user/list/\").then(response => response.json()).then( // handle the result\n    result => {\n      result.sort((a, b) => a.name.localeCompare(b.name)); //console.log(result);\n\n      this.setState({\n        isLoaded: true,\n        posts: result\n      });\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  createStars(n) {\n    var Stars = [];\n    var i = 0;\n\n    for (i = 0; i < n; i++) {\n      Stars.push( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faStar,\n        fixedWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this));\n    }\n\n    return Stars;\n  }\n\n  incrementStars(name, stars) {\n    if (stars == 10) {\n      return;\n    } else stars++;\n\n    fetch('http://10.115.1.12:9000/user/update/' + name, {\n      method: 'PUT',\n      body: JSON.stringify({\n        \"name\": name,\n        \"stars\": stars\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then( // handle the result\n    response => {\n      //console.log(response.status);\n      this.setState({\n        isUpdated: true\n      });\n      this.componentDidMount();\n    }, // Handle error \n    error => {\n      this.setState({\n        isUpdated: true,\n        error\n      });\n    });\n  }\n\n  decrementStars(name, stars) {\n    if (stars == 0) {\n      return;\n    } else stars--;\n\n    return fetch('http://10.115.1.12:9000/user/update/' + name, {\n      method: 'PUT',\n      body: JSON.stringify({\n        \"name\": name,\n        \"stars\": stars\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then( // handle the result\n    response => {\n      //console.log(response.status);\n      this.setState({\n        isUpdated: true\n      });\n      this.componentDidMount();\n    }, // Handle error \n    error => {\n      this.setState({\n        isUpdated: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error in loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"header\",\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"fa fa-3x stars\",\n            children: this.createStars(post.stars)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"fa fa-3x\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.incrementStars(post.name, post.stars),\n              class: \"plus\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCirclePlus,\n                fixedWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 111\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.decrementStars(post.name, post.stars),\n              class: \"minus\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleMinus,\n                fixedWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 112\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default GetOnlineData;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/mattbryce/reward-chart/client/src/components/OnlineData/GetOnlineData.js"],"names":["React","Component","FontAwesomeIcon","faCircleMinus","faCirclePlus","faStar","styled","Button","button","GetOnlineData","constructor","props","state","error","isLoaded","isUpdated","posts","componentDidMount","fetch","then","response","json","result","sort","a","b","name","localeCompare","setState","createStars","n","Stars","i","push","incrementStars","stars","method","body","JSON","stringify","headers","decrementStars","render","map","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCircleMinus, faCirclePlus, faStar} from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nconst Button = styled.button`\n  /* Same as above */\n`;\n\nclass GetOnlineData extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            isUpdated: false,\n            posts : []          \n        };\n    }\n\n    componentDidMount(){\n        \n        fetch(\"http://10.115.1.12:9000/user/list/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                result.sort((a,b) => a.name.localeCompare(b.name));\n                //console.log(result);\n                this.setState({\n                    isLoaded : true,\n                    posts : result\n                });\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    createStars(n){\n        var Stars = [];\n        var i =0;\n        for(i =0; i < n; i++){\n            Stars.push(<FontAwesomeIcon icon={faStar} fixedWidth/>);\n        }\n        return Stars;\n    }\n    incrementStars(name, stars){\n        if(stars == 10){\n            return\n        }else \n        stars++;\n        fetch('http://10.115.1.12:9000/user/update/' + name, {\n            method: 'PUT',\n            body: JSON.stringify(\n                {\n                    \"name\" : name,\n                    \"stars\" : stars\n                }\n            ),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(\n            // handle the result\n            (response) => {\n                //console.log(response.status);\n                this.setState({\n                    isUpdated: true \n                });\n                this.componentDidMount()\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isUpdated: true,\n                    error\n                })\n            },\n        )\n    }\n\n    decrementStars(name, stars){\n        if(stars == 0){\n            return\n        }else \n        stars--;\n        return fetch('http://10.115.1.12:9000/user/update/' + name, {\n            method: 'PUT',\n            \n            body: JSON.stringify(\n                {\n                    \"name\" : name,\n                    \"stars\" : stars\n                }\n            ),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(\n            // handle the result\n            (response) => {\n                //console.log(response.status);\n                this.setState({\n                    isUpdated: true \n                });\n                this.componentDidMount()\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isUpdated: true,\n                    error\n                })\n            },\n        )\n    }\n\n    render() {\n        const {error, isLoaded, posts} = this.state;\n\n        if(error){\n            return <div>Error in loading</div>\n        }else if (!isLoaded) {\n            return <div>Loading ...</div>\n        }else{\n            return(\n                <div>\n                    {\n                        posts.map(post => (\n                            <div>\n                            <h2 className=\"header\">{post.name}</h2>\n                            <div class=\"fa fa-3x stars\">\n                                {this.createStars(post.stars)}\n                            </div>\n                            <br />\n                            <div class='fa fa-3x'>\n                            <Button onClick={ () => this.incrementStars(post.name, post.stars) } class='plus'><FontAwesomeIcon icon={faCirclePlus} fixedWidth/></Button>\n                            <Button onClick={ () => this.decrementStars(post.name, post.stars) } class='minus'><FontAwesomeIcon icon={faCircleMinus} fixedWidth/></Button>\n                            </div>\n                            <br />\n                        </div> \n                        ))\n                    }   \n                </div>\n            );\n        } \n    }\n  }\n  \n  export default GetOnlineData;"]},"metadata":{},"sourceType":"module"}