{"ast":null,"code":"var _jsxFileName = \"/Users/mattbryce/reward-chart/client/src/components/OnlineData/GetOnlineData.js\";\nimport React, { Component } from 'react'; //import Button from '@mui/material/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleMinus, faCirclePlus, faStar } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetOnlineData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      isUpdated: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/user/list/\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        posts: result\n      });\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  createStars(n) {\n    var Stars = [];\n    var i = 0;\n\n    for (i = 0; i < n; i++) {\n      Stars.push( /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faStar,\n        fixedWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this));\n    }\n\n    return Stars;\n  }\n\n  incrementStars(name, stars) {\n    stars++;\n    fetch('http://localhost:9000/user/update/' + name, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        \"name\": name,\n        \"stars\": stars\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then( // handle the result\n    response => {\n      //console.log(response.status);\n      this.setState({\n        isUpdated: true\n      });\n      this.componentDidMount();\n    }, // Handle error \n    error => {\n      this.setState({\n        isUpdated: true,\n        error\n      });\n    });\n  }\n\n  decrementStars(name, stars) {\n    stars--;\n    return fetch('http://localhost:9000/user/update/' + name, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        \"name\": name,\n        \"stars\": stars\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then( // handle the result\n    response => {\n      //console.log(response.status);\n      this.setState({\n        isUpdated: true\n      });\n      this.componentDidMount();\n    }, // Handle error \n    error => {\n      this.setState({\n        isUpdated: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      isUpdated,\n      posts\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error in loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"header\",\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"fa fa-2x\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.incrementStars(post.name, post.stars),\n              class: \"plus\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCirclePlus,\n                fixedWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 111\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.decrementStars(post.name, post.stars),\n              class: \"minus\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleMinus,\n                fixedWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 112\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"fa fa-3x stars\",\n            children: this.createStars(post.stars)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default GetOnlineData;","map":{"version":3,"sources":["/Users/mattbryce/reward-chart/client/src/components/OnlineData/GetOnlineData.js"],"names":["React","Component","FontAwesomeIcon","faCircleMinus","faCirclePlus","faStar","GetOnlineData","constructor","props","state","error","isLoaded","isUpdated","posts","componentDidMount","fetch","then","response","json","result","setState","createStars","n","Stars","i","push","incrementStars","name","stars","method","body","JSON","stringify","headers","decrementStars","render","map","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Button from '@mui/material/Button';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCircleMinus, faCirclePlus, faStar} from '@fortawesome/free-solid-svg-icons';\n\nclass GetOnlineData extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            isUpdated: false,\n            posts : []          \n        };\n    }\n\n    componentDidMount(){\n        \n        fetch(\"http://localhost:9000/user/list/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    posts : result\n                });\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    createStars(n){\n        var Stars = [];\n        var i =0;\n        for(i =0; i < n; i++){\n            Stars.push(<FontAwesomeIcon icon={faStar} fixedWidth/>);\n        }\n        return Stars;\n    }\n    incrementStars(name, stars){\n        stars++;\n        fetch('http://localhost:9000/user/update/' + name, {\n            method: 'PATCH',\n            body: JSON.stringify(\n                {\n                    \"name\" : name,\n                    \"stars\" : stars\n                }\n            ),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(\n            // handle the result\n            (response) => {\n                //console.log(response.status);\n                this.setState({\n                    isUpdated: true \n                });\n                this.componentDidMount()\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isUpdated: true,\n                    error\n                })\n            },\n        )\n    }\n\n    decrementStars(name, stars){\n        stars--;\n        return fetch('http://localhost:9000/user/update/' + name, {\n            method: 'PATCH',\n            \n            body: JSON.stringify(\n                {\n                    \"name\" : name,\n                    \"stars\" : stars\n                }\n            ),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(\n            // handle the result\n            (response) => {\n                //console.log(response.status);\n                this.setState({\n                    isUpdated: true \n                });\n                this.componentDidMount()\n            },\n\n            // Handle error \n            (error) => {\n                this.setState({\n                    isUpdated: true,\n                    error\n                })\n            },\n        )\n    }\n\n    render() {\n        const {error, isLoaded, isUpdated, posts} = this.state;\n\n        if(error){\n            return <div>Error in loading</div>\n        }else if (!isLoaded) {\n            return <div>Loading ...</div>\n        }else{\n            return(\n                <div>\n                    \n                    {\n                        posts.map(post => (\n                            <div>\n                            <h2 className=\"header\">{post.name}</h2>\n                            <div class='fa fa-2x'>\n                            \n                            <button onClick={ () => this.incrementStars(post.name, post.stars) } class='plus'><FontAwesomeIcon icon={faCirclePlus} fixedWidth/></button>\n                            <button onClick={ () => this.decrementStars(post.name, post.stars) } class='minus'><FontAwesomeIcon icon={faCircleMinus} fixedWidth/></button>\n                                    \n                            </div>\n                            \n                            \n                            <div class=\"fa fa-3x stars\">\n                                {this.createStars(post.stars)}\n                            </div>\n                            \n                            <br />\n                        </div> \n                        ))\n                    }\n                    \n                </div>\n            );\n        }\n      \n    }\n  }\n  \n  export default GetOnlineData;"]},"metadata":{},"sourceType":"module"}